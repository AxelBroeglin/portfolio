// RESPONSIVE
@mixin tablet-only {
    @media screen and (min-width: map-get($breakpoints, tablet)){
        @content;
    }
}
@mixin desktop-only {
    @media screen and (min-width: map-get($breakpoints, desktop)){
        @content;
    }
}


// FONTS
@mixin playfair400{
    font-family :'Playfair Display', serif;
    font-weight:400;
}
@mixin playfair500{
    font-family :'Playfair Display', serif;
    font-weight:500;
}


//PADDINGS
@mixin p-top1{
    padding-top: 1vh;
}
@mixin p-top2{
    padding-top: 2vh;
}
@mixin p-top3{
    padding-top: 3vh;
}
@mixin p-top4{
    padding-top: 4vh;
}
@mixin p-top5{
    padding-top: 5vh;
}
@mixin p-top6{
    padding-top: 6vh;
}
@mixin p-top7{
    padding-top: 7vh;
}

@mixin p-bottom1{
    padding-bottom: 1vh;
}
@mixin p-bottom2{
    padding-bottom: 2vh;
}
@mixin p-bottom3{
    padding-bottom: 3vh;
}
@mixin p-bottom4{
    padding-bottom: 4vh;
}
@mixin p-bottom5{
    padding-bottom: 5vh;
}
@mixin p-bottom6{
    padding-bottom: 6vh;
}
@mixin p-bottom7{
    padding-bottom: 7vh;
}
@mixin p-bottom8{
    padding-bottom: 8vh;
}


/// Shorthand mixin for offset positioning

//@param {String} $position - Either `relative`, `absolute` or `fixed`
//@param {Length} $top [null] - Top offset
//@param {Length} $right [null] - Right offset
//@param {Length} $bottom [null] - Bottom offset
//@param {Length} $left [null] - Left offset
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
  }
// To be used as :
// .foo {
//     @include position(absolute, $top: 1em, $left: 50%);
//   }